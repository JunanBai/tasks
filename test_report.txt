
> react-typescript-starter@0.1.0 test
> react-scripts test

Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
FAIL src/arrays.test.ts
  ‚óè Testing the array functions ‚Ä∫ Testing the bookEndList function

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 3

    - Array []
    + Array [
    +   undefined,
    + ]

      39 |         expect(bookEndList(NUMBERS_2)).toEqual([100, 200]);
      40 |         expect(bookEndList(NUMBERS_3)).toEqual([5, 5]);
    > 41 |         expect(bookEndList(NUMBERS_4)).toEqual([]);
         |                                        ^
      42 |         expect(bookEndList(NUMBERS_5)).toEqual([100, 3]);
      43 |         expect(bookEndList(NUMBERS_6)).toEqual([-100, 200]);
      44 |     });

      at Object.<anonymous> (src/arrays.test.ts:41:40)

FAIL src/objects.test.ts
  ‚óè Testing the object functions ‚Ä∫ Testing the isCorrect function

    expect(received).toEqual(expected) // deep equality

    Expected: true
    Received: false

      66 |         expect(isCorrect(ADDITION_QUESTION, "4")).toEqual(true);
      67 |         expect(isCorrect(ADDITION_QUESTION, "2")).toEqual(false);
    > 68 |         expect(isCorrect(ADDITION_QUESTION, " 4\n")).toEqual(true);
         |                                                      ^
      69 |         expect(isCorrect(LETTER_QUESTION, "Z")).toEqual(true);
      70 |         expect(isCorrect(LETTER_QUESTION, "z")).toEqual(true);
      71 |         expect(isCorrect(LETTER_QUESTION, "4")).toEqual(false);

      at Object.<anonymous> (src/objects.test.ts:68:54)

  ‚óè Testing the object functions ‚Ä∫ Testing the toShortForm function

    expect(received).toEqual(expected) // deep equality

    Expected: "1: Addition"
    Received: "1:Addition"

      106 |     // toShortForm
      107 |     test("Testing the toShortForm function", () => {
    > 108 |         expect(toShortForm(ADDITION_QUESTION)).toEqual("1: Addition");
          |                                                ^
      109 |         expect(toShortForm(LETTER_QUESTION)).toEqual("2: Letters");
      110 |         expect(toShortForm(COLOR_QUESTION)).toEqual("5: Colors");
      111 |         expect(toShortForm(SHAPE_QUESTION)).toEqual("9: Shapes");

      at Object.<anonymous> (src/objects.test.ts:108:48)

  ‚óè Testing the object functions ‚Ä∫ Testing the toMarkdown function

    expect(received).toEqual(expected) // deep equality

    - Expected  - 0
    + Received  + 1

      # Addition
      What is 2+2?
    +

      116 |     // toMarkdown
      117 |     test("Testing the toMarkdown function", () => {
    > 118 |         expect(toMarkdown(ADDITION_QUESTION)).toEqual(`# Addition
          |                                               ^
      119 | What is 2+2?`);
      120 |         expect(toMarkdown(LETTER_QUESTION)).toEqual(`# Letters
      121 | What is the last letter of the English alphabet?`);

      at Object.<anonymous> (src/objects.test.ts:118:47)

  ‚óè Testing the object functions ‚Ä∫ Testing the duplicateQuestion function

    expect(received).toEqual(expected) // deep equality

    - Expected  - 2
    + Received  + 2

      Object {
        "body": "What is 2+2?",
        "expected": "4",
    -   "id": 9,
    -   "name": "Copy of Addition",
    +   "id": 1,
    +   "name": "Copy ofAddition",
        "options": Array [],
        "points": 1,
        "published": false,
        "type": "short_answer_question",
      }

      207 |     // duplicateQuestion
      208 |     test("Testing the duplicateQuestion function", () => {
    > 209 |         expect(duplicateQuestion(9, ADDITION_QUESTION)).toEqual({
          |                                                         ^
      210 |             id: 9,
      211 |             name: "Copy of Addition",
      212 |             body: "What is 2+2?",

      at Object.<anonymous> (src/objects.test.ts:209:57)

  ‚óè Testing the object functions ‚Ä∫ Testing the addOption function

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 6

      Object {
    +   "Option": Array [
    +     "square",
    +     "triangle",
    +     "circle",
    +     "heptagon",
    +   ],
        "body": "What shape can you make with one line?",
        "expected": "circle",
        "id": 9,
        "name": "Shapes",
        "options": Array [
          "square",
          "triangle",
          "circle",
    -     "heptagon",
        ],
        "points": 2,
        "published": false,
        "type": "multiple_choice_question",
      }

      232 |     // addOption
      233 |     test("Testing the addOption function", () => {
    > 234 |         expect(addOption(SHAPE_QUESTION, "heptagon")).toEqual({
          |                                                       ^
      235 |             id: 9,
      236 |             name: "Shapes",
      237 |             body: "What shape can you make with one line?",

      at Object.<anonymous> (src/objects.test.ts:234:55)

FAIL src/HtmlCss.test.tsx
  ‚óè Some Bootstrap Elements are added ‚Ä∫ There is one bootstrap button with the text 'Log Hello World'

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name `/Log Hello World/i`

    Here are the accessible roles:

      heading:

      Name "This is a header text":
      [36m<h1 />[39m

      --------------------------------------------------
      banner:

      Name "":
      [36m<header[39m
        [33mclass[39m=[32m"App-header"[39m
      [36m/>[39m

      --------------------------------------------------
      button:

      Name "Log Hellow World":
      [36m<button[39m
        [33mclass[39m=[32m"btn btn-primary"[39m
        [33mtype[39m=[32m"button"[39m
      [36m/>[39m

      --------------------------------------------------
      list:

      Name "":
      [36m<ul />[39m

      --------------------------------------------------
      listitem:

      Name "":
      [36m<li />[39m

      Name "":
      [36m<li />[39m

      Name "":
      [36m<li />[39m

      --------------------------------------------------
      img:

      Name "A picture of my favourite game":
      [36m<img[39m
        [33malt[39m=[32m"A picture of my favourite game"[39m
        [33msrc[39m=[32m"Call of Duty.jpg"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"App"[39m
        [36m>[39m
          [36m<h1>[39m
            [0m This is a header text[0m
          [36m</h1>[39m
          [36m<header[39m
            [33mclass[39m=[32m"App-header"[39m
          [36m>[39m
            [0mUD CISC275 with React Hooks and TypeScript[0m
          [36m</header>[39m
          [36m<p>[39m
            [0mEdit [0m
            [36m<code>[39m
              [0msrc/App.tsx[0m
            [36m</code>[39m
            [0m and save. This page will automatically reload.[0m
          [36m</p>[39m
          [36m<button[39m
            [33mclass[39m=[32m"btn btn-primary"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mLog Hellow World[0m
          [36m</button>[39m
          [36m<p>[39m
            [0mJunnan Bai[0m
          [36m</p>[39m
          [36m<p>[39m
            [0mHello World[0m
          [36m</p>[39m
          [36m<ul>[39m
            [36m<li>[39m
              [0mI love CISC275[0m
            [36m</li>[39m
            [36m<li>[39m
              [0mone of my favourite course[0m
            [36m</li>[39m
            [36m<li>[39m
              [0mI love HTML and CSS[0m
            [36m</li>[39m
          [36m</ul>[39m
          [36m<div[39m
            [33mclass[39m=[32m"row"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"col"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"Column"[39m
              [36m/>[39m
              [0mFirst column[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"col"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"Column"[39m
              [36m/>[39m
              [0mSecond column[0m
            [36m</div>[39m
          [36m</div>[39m
          [36m<img[39m
            [33malt[39m=[32m"A picture of my favourite game"[39m
            [33msrc[39m=[32m"Call of Duty.jpg"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      39 |     test("There is one bootstrap button with the text 'Log Hello World'", () => {
      40 |         render(<App />);
    > 41 |         const button = screen.getByRole("button", { name: /Log Hello World/i });
         |                               ^
      42 |         expect(button).toBeInTheDocument();
      43 |         expect(button).toHaveClass("btn");
      44 |         expect(button).toHaveClass("btn-primary");

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByRole (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/HtmlCss.test.tsx:41:31)

  ‚óè Some Bootstrap Elements are added ‚Ä∫ Clicking the bootstrap button logs 'Hello World!'

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name `/Log Hello World/i`

    Here are the accessible roles:

      heading:

      Name "This is a header text":
      [36m<h1 />[39m

      --------------------------------------------------
      banner:

      Name "":
      [36m<header[39m
        [33mclass[39m=[32m"App-header"[39m
      [36m/>[39m

      --------------------------------------------------
      button:

      Name "Log Hellow World":
      [36m<button[39m
        [33mclass[39m=[32m"btn btn-primary"[39m
        [33mtype[39m=[32m"button"[39m
      [36m/>[39m

      --------------------------------------------------
      list:

      Name "":
      [36m<ul />[39m

      --------------------------------------------------
      listitem:

      Name "":
      [36m<li />[39m

      Name "":
      [36m<li />[39m

      Name "":
      [36m<li />[39m

      --------------------------------------------------
      img:

      Name "A picture of my favourite game":
      [36m<img[39m
        [33malt[39m=[32m"A picture of my favourite game"[39m
        [33msrc[39m=[32m"Call of Duty.jpg"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"App"[39m
        [36m>[39m
          [36m<h1>[39m
            [0m This is a header text[0m
          [36m</h1>[39m
          [36m<header[39m
            [33mclass[39m=[32m"App-header"[39m
          [36m>[39m
            [0mUD CISC275 with React Hooks and TypeScript[0m
          [36m</header>[39m
          [36m<p>[39m
            [0mEdit [0m
            [36m<code>[39m
              [0msrc/App.tsx[0m
            [36m</code>[39m
            [0m and save. This page will automatically reload.[0m
          [36m</p>[39m
          [36m<button[39m
            [33mclass[39m=[32m"btn btn-primary"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mLog Hellow World[0m
          [36m</button>[39m
          [36m<p>[39m
            [0mJunnan Bai[0m
          [36m</p>[39m
          [36m<p>[39m
            [0mHello World[0m
          [36m</p>[39m
          [36m<ul>[39m
            [36m<li>[39m
              [0mI love CISC275[0m
            [36m</li>[39m
            [36m<li>[39m
              [0mone of my favourite course[0m
            [36m</li>[39m
            [36m<li>[39m
              [0mI love HTML and CSS[0m
            [36m</li>[39m
          [36m</ul>[39m
          [36m<div[39m
            [33mclass[39m=[32m"row"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"col"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"Column"[39m
              [36m/>[39m
              [0mFirst column[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"col"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"Column"[39m
              [36m/>[39m
              [0mSecond column[0m
            [36m</div>[39m
          [36m</div>[39m
          [36m<img[39m
            [33malt[39m=[32m"A picture of my favourite game"[39m
            [33msrc[39m=[32m"Call of Duty.jpg"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      54 |         const consoleSpy = jest.spyOn(console, "log");
      55 |         render(<App />);
    > 56 |         const button = screen.getByRole("button", { name: /Log Hello World/i });
         |                               ^
      57 |         userEvent.click(button);
      58 |         expect(consoleSpy).toHaveBeenCalledWith("Hello World!");
      59 |     });

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByRole (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/HtmlCss.test.tsx:56:31)

FAIL src/functions.test.ts
  ‚óè Testing the basic functions ‚Ä∫ Testing the add3 function

    expect(received).toBe(expected) // Object.is equality

    Expected: 15
    Received: 6

      21 |         expect(add3(1, 2, 3)).toBe(6);
      22 |         expect(add3(9, 7, 4)).toBe(20);
    > 23 |         expect(add3(6, -3, 9)).toBe(15);
         |                                ^
      24 |         expect(add3(10, 1, -9)).toBe(11);
      25 |         expect(add3(-9, -100, -4)).toBe(0);
      26 |         expect(add3(-1, -1, 1)).toBe(1);

      at Object.<anonymous> (src/functions.test.ts:23:32)

  ‚óè Testing the basic functions ‚Ä∫ Testing the isQuestion function

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      40 |         expect(isQuestion("Who are you?")).toBe(true);
      41 |         expect(isQuestion("WHAT ARE YOU !?")).toBe(true);
    > 42 |         expect(isQuestion("WHAT IS THIS?!")).toBe(false);
         |                                              ^
      43 |         expect(isQuestion("OH GOD!")).toBe(false);
      44 |         expect(isQuestion("Oh nevermind, it's fine.")).toBe(false);
      45 |         expect(isQuestion("")).toBe(false);

      at Object.<anonymous> (src/functions.test.ts:42:46)

  ‚óè Testing the basic functions ‚Ä∫ Testing the convertYesNo function

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: null

      48 |     test("Testing the convertYesNo function", () => {
      49 |         expect(convertYesNo("yes")).toBe(true);
    > 50 |         expect(convertYesNo("YES")).toBe(true);
         |                                     ^
      51 |         expect(convertYesNo("NO")).toBe(false);
      52 |         expect(convertYesNo("no")).toBe(false);
      53 |         expect(convertYesNo("Apple")).toBe(null);

      at Object.<anonymous> (src/functions.test.ts:50:37)

PASS src/text.test.tsx
FAIL src/App.test.tsx
  ‚óè renders the course name somewhere

    TestingLibraryElementError: Found multiple elements with the text: /CISC275/i

    Here are the matching elements:

    Ignored nodes: comments, <script />, <style />
    [36m<header[39m
      [33mclass[39m=[32m"App-header"[39m
    [36m>[39m
      [0mUD CISC275 with React Hooks and TypeScript[0m
    [36m</header>[39m

    Ignored nodes: comments, <script />, <style />
    [36m<li>[39m
      [0mI love CISC275[0m
    [36m</li>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"App"[39m
        [36m>[39m
          [36m<h1>[39m
            [0m This is a header text[0m
          [36m</h1>[39m
          [36m<header[39m
            [33mclass[39m=[32m"App-header"[39m
          [36m>[39m
            [0mUD CISC275 with React Hooks and TypeScript[0m
          [36m</header>[39m
          [36m<p>[39m
            [0mEdit [0m
            [36m<code>[39m
              [0msrc/App.tsx[0m
            [36m</code>[39m
            [0m and save. This page will automatically reload.[0m
          [36m</p>[39m
          [36m<button[39m
            [33mclass[39m=[32m"btn btn-primary"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mLog Hellow World[0m
          [36m</button>[39m
          [36m<p>[39m
            [0mJunnan Bai[0m
          [36m</p>[39m
          [36m<p>[39m
            [0mHello World[0m
          [36m</p>[39m
          [36m<ul>[39m
            [36m<li>[39m
              [0mI love CISC275[0m
            [36m</li>[39m
            [36m<li>[39m
              [0mone of my favourite course[0m
            [36m</li>[39m
            [36m<li>[39m
              [0mI love HTML and CSS[0m
            [36m</li>[39m
          [36m</ul>[39m
          [36m<div[39m
            [33mclass[39m=[32m"row"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"col"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"Column"[39m
              [36m/>[39m
              [0mFirst column[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"col"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"Column"[39m
              [36m/>[39m
              [0mSecond column[0m
            [36m</div>[39m
          [36m</div>[39m
          [36m<img[39m
            [33malt[39m=[32m"A picture of my favourite game"[39m
            [33msrc[39m=[32m"Call of Duty.jpg"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

       5 | test("renders the course name somewhere", () => {
       6 |     render(<App />);
    >  7 |     const linkElement = screen.getByText(/CISC275/i);
         |                                ^
       8 |     expect(linkElement).toBeInTheDocument();
       9 | });
      10 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at getElementError (node_modules/@testing-library/dom/dist/query-helpers.js:25:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/dom/dist/query-helpers.js:29:10)
      at node_modules/@testing-library/dom/dist/query-helpers.js:66:13
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/App.test.tsx:7:32)
      at TestScheduler.scheduleTests (node_modules/@jest/core/build/TestScheduler.js:333:13)
      at runJest (node_modules/@jest/core/build/runJest.js:404:19)
      at _run10000 (node_modules/@jest/core/build/cli/index.js:320:7)
      at runCLI (node_modules/@jest/core/build/cli/index.js:173:3)

----------------|---------|----------|---------|---------|-------------------
File            | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
----------------|---------|----------|---------|---------|-------------------
All files       |   93.96 |    87.23 |   95.12 |   93.85 |                   
 src            |   93.96 |    87.23 |   95.12 |   93.85 |                   
  App.tsx       |      50 |      100 |      50 |      50 | 17                
  arrays.ts     |   96.72 |    92.59 |     100 |   96.61 | 18,106            
  functions.ts  |   83.33 |       70 |     100 |   83.33 | 20,24,56          
  objects.ts    |   97.14 |       90 |    90.9 |   97.14 | 95                
 src/interfaces |       0 |        0 |       0 |       0 |                   
  question.ts   |       0 |        0 |       0 |       0 |                   
----------------|---------|----------|---------|---------|-------------------
Test Suites: 5 failed, 1 passed, 6 total
Tests:       12 failed, 21 passed, 33 total
Snapshots:   0 total
Time:        5.288 s
Ran all test suites.
